// üß† EJERCICIOS TRYHARD - ARROW FUNCTIONS & ES6

// 1Ô∏è‚É£ Escribe una funci√≥n flecha que reciba un array de strings y retorne un nuevo array con las longitudes de cada string.
// Ej: ["hola", "mundo"] ‚Üí [4, 5]


// 2Ô∏è‚É£ Crea una funci√≥n flecha que reciba un n√∫mero y retorne true si es primo, false si no lo es.
// (Pista: usa un bucle para verificar si tiene divisores entre 2 y n-1)


// 3Ô∏è‚É£ Dado un array de objetos con {nombre, edad}, usa `.filter` y una funci√≥n flecha para retornar solo los mayores de 18 a√±os.


// 4Ô∏è‚É£ Crea una funci√≥n flecha que reciba dos fechas y retorne la cantidad de d√≠as entre ellas.
// (Pista: convierte a ms con Date y resta, luego convierte a d√≠as)


// 5Ô∏è‚É£ Crea una funci√≥n flecha que reciba un array de n√∫meros y retorne el promedio sin usar `.reduce`


// 6Ô∏è‚É£ Usa una arrow function para invertir un string. Ej: "Hola" ‚Üí "aloH"
// (Pista: string ‚Üí array ‚Üí reverse ‚Üí join)


// 7Ô∏è‚É£ Crea una funci√≥n flecha que reciba una lista de palabras y devuelva la que tiene m√°s vocales.


// 8Ô∏è‚É£ Genera una funci√≥n flecha que reciba una frase y devuelva un objeto con la cantidad de cada vocal que aparece en ella.
// Ej: "Hola mundo" ‚Üí { a: 1, e: 0, i: 0, o: 2, u: 1 }


// 9Ô∏è‚É£ Usa una arrow function que reciba un array de n√∫meros y devuelva s√≥lo los que son potencias de 2 (2, 4, 8, 16...)
// (Pista: usa log2 o una funci√≥n matem√°tica)


// üîü Escribe una funci√≥n flecha que simule el juego "piedra, papel o tijera".
// Recibe dos strings y devuelve qui√©n gana o si es empate. Ej: "piedra", "tijera" ‚Üí "Jugador 1 gana"
