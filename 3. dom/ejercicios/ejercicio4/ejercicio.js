// 1Ô∏è‚É£ Al hacer clic en el bot√≥n con id="btnClick", muestra un mensaje en consola.

// 2Ô∏è‚É£ Al escribir en el input con id="inputTexto", muestra en consola el texto actual.

// 3Ô∏è‚É£ Al enviar el formulario con id="formulario", evita que se recargue la p√°gina y muestra un mensaje debajo del formulario (en el <p id="mensaje">).

// 4Ô∏è‚É£ Cambia el color de fondo del bot√≥n "btnClick" cuando el mouse pase sobre √©l, y vuelve al original cuando el mouse salga.

// 5Ô∏è‚É£ Cuando hagas doble clic en cualquiera de los <li> dentro del ul con id="lista", cambia el texto del √≠tem clickeado a may√∫sculas.

// 6Ô∏è‚É£ Usa delegaci√≥n de eventos en el ul con id="lista" para detectar clics en cualquier √≠tem y alternar la clase "activo" en el elemento clickeado.

// 7Ô∏è‚É£ Modifica el enlace con id="enlace" para que al hacer clic, en vez de navegar, muestre un alert que diga "Navegaci√≥n detenida" y previene el comportamiento por defecto.

// 8Ô∏è‚É£ Al presionar cualquier tecla en el input, muestra en consola la tecla presionada.

// 9Ô∏è‚É£ Al enfocar el input (evento "focus"), cambia el borde del input a color azul, y cuando pierda el foco (evento "blur"), vuelve al borde original.

// üîü Crea un evento personalizado llamado "eventoEspecial" que se dispare al hacer clic en el bot√≥n y que muestre en consola "Evento personalizado disparado".


// 1Ô∏è‚É£ Implementa un toggle que al hacer clic en el bot√≥n con id="btnToggle":
// - Cambie la clase "activo" en el t√≠tulo <h1 id="titulo"> para alternar estilos.

// 2Ô∏è‚É£ Filtra en tiempo real la lista <ul id="lista"> con base en lo que se escribe en el input id="inputFiltro":
// - Muestra solo los <li> que contengan el texto ingresado (ignorando may√∫sculas/min√∫sculas).

// 3Ô∏è‚É£ En el formulario con id="formRegistro", al enviar:
// - Valida que el email tenga formato correcto usando expresi√≥n regular.
// - Si est√° mal, evita el env√≠o y muestra un mensaje de error en <p id="mensaje">.
// - Si est√° bien, muestra mensaje de √©xito y limpia el formulario.

// 4Ô∏è‚É£ Usa delegaci√≥n de eventos en la <ul id="lista"> para:
// - Detectar clicks en cualquier <li>.
// - Al hacer clic, muestra en <p id="mensaje"> el texto y el atributo "data-id" del elemento clickeado.

// 5Ô∏è‚É£ Implementa una funci√≥n que limite el n√∫mero de veces que se puede hacer clic en el bot√≥n #btnToggle a 3.
// - Luego de 3 clicks, deshabilita el bot√≥n y muestra un mensaje en <p id="mensaje">.

// 6Ô∏è‚É£ A√±ade eventos para que:
// - Al presionar Enter dentro del input #inputFiltro, se muestre en consola un mensaje con el texto actual del input.

// 7Ô∏è‚É£ Previene que el enlace con id="enlace" navegue y en lugar de eso abre una nueva ventana popup con tama√±o 600x400 que carga la URL del enlace.

// 8Ô∏è‚É£ Al hacer clic en cualquier lugar fuera del formulario #formRegistro (en el body):
// - Si el formulario tiene alg√∫n campo enfocado, quita el foco (blur).

// 9Ô∏è‚É£ Crea y dispara un evento personalizado "usuarioRegistrado" cuando se registre el usuario con √©xito,
// - Y escucha ese evento para mostrar un mensaje en consola: "Usuario registrado con √©xito!".

// üîü Usa capture y bubbling en dos elementos anidados (puedes crear dos divs dentro del body en el HTML):
// - Pon listeners para mostrar en consola cu√°ndo un evento de click pasa por la fase capture y bubbling.
// - Aseg√∫rate de poder detener la propagaci√≥n en alguna fase y observar el resultado.
